name: CI

on:
  push:
  pull_request:
  release:
    types:
      - published

env:
  MINIMUM_PYTHON_VERSION: "3.7"

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  precommit:
    runs-on: ubuntu-latest
    steps:
      - name: Install Python ${{ env.MINIMUM_PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - uses: actions/checkout@v2
      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          python -m pip install pre-commit virtualenv!=20.0.6
          pre-commit install
      - name: Run static code inspections
        run: pre-commit run --all-files

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.7", "3.8", "3.9"]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox and any other packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions poetry
      - name: Run quick tests (Not Python ${{ env.MINIMUM_PYTHON_VERSION }})
        if: matrix.python != "${{ env.MINIMUM_PYTHON_VERSION }}"
        run: tox -e py -- -m "not slow"
      - name: Run all tests (Python ${{ env.MINIMUM_PYTHON_VERSION }} only)
        if: matrix.python == "${{ env.MINIMUM_PYTHON_VERSION }}"
        run: tox -e py
      - name: Upload coverage results
        if: matrix.python == "${{ env.MINIMUM_PYTHON_VERSION }}"
        run: poetry run codecov
        env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    if: github.event_name == 'release'
    needs: [precommit, build]
    runs-on: ubuntu-latest
    steps:
      - name: Install Python ${{ env.MINIMUM_PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Upload to pypi
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
        run: |
          poetry publish --build
